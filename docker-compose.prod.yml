services:
  rgsx-web:
    build: .
    container_name: rgsx-web-prod
    restart: unless-stopped
    environment:
      - TZ=${TZ:-UTC}
      - RGSX_MODE=web
      - WEB_PORT=${WEB_PORT:-8080}
      # Security: Set API key in production
      - RGSX_API_KEY=${RGSX_API_KEY:-}
      # Rate limiting for production
      - RGSX_RATE_LIMIT=${RGSX_RATE_LIMIT:-60/min}
      # Enable data updates (platforms/games) - persists to /saves volume
      - RGSX_DISABLE_DATA_UPDATE=false
    volumes:
      # Production volume mounts
      - ${NAS_ROMS:-./roms}:/roms
      - ${RGSX_SAVES:-./saves}:/saves
    ports:
      - "${WEB_PORT:-8080}:${WEB_PORT:-8080}"
    networks:
      - rgsx-prod
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${WEB_PORT:-8080}/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rgsx-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Uncomment for HTTPS
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rgsx-web
    networks:
      - rgsx-prod
    profiles:
      - nginx

networks:
  rgsx-prod:
    driver: bridge
